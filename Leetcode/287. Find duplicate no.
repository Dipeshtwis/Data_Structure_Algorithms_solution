#Question_Link

https://leetcode.com/problems/find-the-duplicate-number/

#Solutions

// C++ (approach-1 Brute-force)

// C++ (approach-2 Hashhing)

class Solution {
public:
    int findDuplicate(vector<int>& nums) {
        unordered_map<int, int> mp;
        for(int i=0;i<nums.size();i++){
            if(mp.find(nums[i]) != mp.end())
                return nums[i];
            mp[nums[i]]= i;
        }
        return nums[0];
    }
};

//C++ (approach-3 Hare and tortoise method)

class Solution {
public:
    int findDuplicate(vector<int>& nums) {
        int slow = nums[0];
        int fast = nums[0];
        do{
            slow = nums[slow];
            fast = nums[nums[fast]];
        }while(slow!= fast);
        
        fast = nums[0];
        while(slow!= fast){
            slow = nums[slow];
            fast = nums[fast];
        }
        return slow;
        
    }
};
